name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags
  workflow_dispatch:  # Allow manual triggers

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:  
          - arch: arm64
            target: ubuntu-arm64  

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build executable for ${{ matrix.target }}
        run: |
          docker run --rm --platform linux/${{ matrix.arch }} \
            -v ${{ github.workspace }}:/app \
            -w /app python:3.11 bash -c "\
              curl -Ls https://astral.sh/uv/install.sh | bash && \
              source /root/.local/bin/env && \
              uv venv .venv && \
              source .venv/bin/activate && \
              uv sync && \
              uv pip install pyinstaller && \
              pyinstaller \
                --onefile \
                --name=browser-agent \
                --clean \
                --add-data=browser_agent_cli:browser_agent_cli \
                browser_agent_cli/cli.py && \
                cp dist/browser-agent /app/browser-agent-${{ matrix.target }}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: browser-agent-${{ matrix.target }}
          path: browser-agent-${{ matrix.target }}
          if-no-files-found: error

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/browser-agent-ubuntu-arm64/browser-agent-ubuntu-arm64
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 